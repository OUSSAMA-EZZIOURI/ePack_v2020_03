/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.packaging.reports;

import __main__.GlobalVars;
import entity.BaseContainer;
import entity.ConfigWarehouse;
import entity.HisBaseContainer;
import helper.HQLHelper;
import helper.Helper;
import java.util.List;
import javax.swing.JOptionPane;
import org.hibernate.Query;

/**
 *
 * @author Administrator
 */
public final class PACKAGING_UI0010A_Changing_Status extends javax.swing.JDialog {

    private BaseContainer bc;
    private int scanMode;
    private final String MSG_DROP_SUCCESS = "Palette [%s] supprimée avec succès !";
    private PACKAGING_UI0010_PalletDetails_JPANEL parentJpanel;
    private PACKAGING_UI0010_PalletDetails_JFRAME parentJframe;

    /**
     * Creates new form UI9001_DropPalletConfirmation
     *
     * @param parent
     * @param modal
     * @param bc
     * @param scanMode
     *
     */
    public PACKAGING_UI0010A_Changing_Status(javax.swing.JPanel parent, boolean modal, BaseContainer bc, int scanMode) {

        initComponents();
        initGui(parent);
        this.setBaseContainer(bc);
        palletNumber_lbl.setText(bc.getPalletNumber());
        this.scanMode = scanMode;
        status_box.addItem(GlobalVars.PALLET_CLOSED);
        status_box.addItem(GlobalVars.PALLET_STORED);
        switch (this.bc.getContainerState()) {
            case GlobalVars.PALLET_BLOCKED:
                block_btn.setEnabled(false);
                break;
            default:
                block_btn.setEnabled(true);
                break;
        }
    }

    private void initGui(javax.swing.JPanel parent) {
        this.parentJpanel = (PACKAGING_UI0010_PalletDetails_JPANEL) parent;
        this.setModal(true);
        //Center the this dialog in the screen
        Helper.centerJDialog(this);

        //Disable resizing
        this.setResizable(false);

    }

    /**
     * Creates new form UI9001_DropPalletConfirmation
     *
     * @param parent
     * @param modal
     * @param bc
     * @param scanMode
     *
     */
    public PACKAGING_UI0010A_Changing_Status(PACKAGING_UI0010_PalletDetails_JFRAME parent, boolean modal, BaseContainer bc, int scanMode) {
        //super(parent, modal);
        initComponents();
        initGui(parent);
        this.setBaseContainer(bc);
        palletNumber_lbl.setText(bc.getPalletNumber());
        this.scanMode = scanMode;
    }

    private void initGui(PACKAGING_UI0010_PalletDetails_JFRAME parent) {
        this.parentJframe = parent;

        //Center the this dialog in the screen
        Helper.centerJDialog(this);

        //Disable resizing
        this.setResizable(false);

        this.setModal(true);

    }

    public BaseContainer getBaseContainer() {
        return bc;
    }

    public void setBaseContainer(BaseContainer bc) {
        this.bc = bc;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        feedback_txtbox = new javax.swing.JTextArea();
        block_btn = new javax.swing.JButton();
        cancel_btn = new javax.swing.JButton();
        palletNumber_lbl = new javax.swing.JLabel();
        release_btn = new javax.swing.JButton();
        status_box = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Changement de statut");
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        jLabel1.setText("Commentaire ");

        feedback_txtbox.setColumns(20);
        feedback_txtbox.setRows(5);
        jScrollPane1.setViewportView(feedback_txtbox);

        block_btn.setBackground(new java.awt.Color(255, 0, 0));
        block_btn.setForeground(new java.awt.Color(255, 255, 255));
        block_btn.setText("Bloquer");
        block_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                block_btnActionPerformed(evt);
            }
        });

        cancel_btn.setText("Annuler");
        cancel_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_btnActionPerformed(evt);
            }
        });

        palletNumber_lbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        palletNumber_lbl.setForeground(new java.awt.Color(0, 51, 255));

        release_btn.setBackground(new java.awt.Color(51, 255, 51));
        release_btn.setForeground(new java.awt.Color(0, 0, 0));
        release_btn.setText("Valider");
        release_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                release_btnActionPerformed(evt);
            }
        });

        jLabel2.setText("Nouveau statut");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(release_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(block_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel_btn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(status_box, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(palletNumber_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(palletNumber_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(status_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(block_btn)
                    .addComponent(cancel_btn)
                    .addComponent(release_btn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancel_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_btnActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancel_btnActionPerformed

    private void block_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_block_btnActionPerformed

        if (!feedback_txtbox.getText().isEmpty()) {
            if (bc.getContainerStateCode().equals(GlobalVars.PALLET_RESERVED_CODE)) {
                int confirmed = JOptionPane.showConfirmDialog(null,
                        String.format("Pallet already reserved, do you like to remove it from the consignment ?"),
                        "Pallet state",
                        JOptionPane.WARNING_MESSAGE);

                if (confirmed == 0) {
                    //Remove pallet line from loading plan
                    Query query = Helper.sess.createQuery(HQLHelper.DEL_LOAD_PLAN_LINE_BY_PALLET_NUMBER);
                    query.setParameter("palletNumber", bc.getPalletNumber());
                    int id = query.executeUpdate();
                    this.bc.setContainerState(GlobalVars.PALLET_BLOCKED);
                    this.bc.setContainerStateCode(GlobalVars.PALLET_BLOCKED_CODE);
                    HisBaseContainer hbc = new HisBaseContainer().parseContainerData(this.bc, feedback_txtbox.getText());
                    hbc.create(hbc);
                    Helper.sess.flush();
                }
            } else if (!bc.getContainerStateCode().equals(GlobalVars.PALLET_DISPATCHED_CODE)
                    && !bc.getContainerStateCode().equals(GlobalVars.PALLET_DELETED_CODE)) {
                int confirmed = JOptionPane.showConfirmDialog(null,
                        String.format("Do you confirm the block of the pallet ?"),
                        "Pallet state",
                        JOptionPane.WARNING_MESSAGE);
                if (confirmed == 0) {
                    this.bc.setContainerState(GlobalVars.PALLET_BLOCKED);
                    this.bc.setContainerStateCode(GlobalVars.PALLET_BLOCKED_CODE);
                    HisBaseContainer hbc = new HisBaseContainer().parseContainerData(this.bc, feedback_txtbox.getText());
                    hbc.create(hbc);
                    Helper.sess.flush();
                }
            }

            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Merci de saisir un commentaire !", "Erreur ! ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_block_btnActionPerformed

    private void release_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_release_btnActionPerformed
        String code = GlobalVars.getStateCode(status_box.getSelectedItem().toString().toUpperCase());
        String newState = status_box.getSelectedItem().toString().toUpperCase();
        if (!feedback_txtbox.getText().isEmpty()) {

            if (!bc.getContainerStateCode().equals(GlobalVars.PALLET_BLOCKED_CODE)
                    && bc.getContainerStateCode().equals(GlobalVars.PALLET_RESERVED_CODE)) {
                int confirmed = JOptionPane.showConfirmDialog(null,
                        String.format("Pallet already reserved, do you like to remove it from the consignment ?"),
                        "Pallet state",
                        JOptionPane.WARNING_MESSAGE);

                if (confirmed == 0) {
                    //Remove pallet line from loading plan
                    Query query = Helper.sess.createQuery(HQLHelper.DEL_LOAD_PLAN_LINE_BY_PALLET_NUMBER);
                    query.setParameter("palletNumber", bc.getPalletNumber());
                    int id = query.executeUpdate();
                }
            } //Pallet BLOCKED but not DISPATCHED or DELETED to change to CLOSED or STORED
            else if (!bc.getContainerStateCode().equals(GlobalVars.PALLET_BLOCKED_CODE)
                    && !bc.getContainerStateCode().equals(GlobalVars.PALLET_DISPATCHED_CODE)
                    && !bc.getContainerStateCode().equals(GlobalVars.PALLET_DELETED_CODE)) {

                this.bc.setContainerState(newState);
                this.bc.setContainerStateCode(code);
                HisBaseContainer hbc = new HisBaseContainer().parseContainerData(this.bc, feedback_txtbox.getText());
                hbc.create(hbc);
                Helper.sess.flush();
                this.dispose();
            } //Pallet BLOCKED need to be released
            else if (bc.getContainerStateCode().equals(GlobalVars.PALLET_BLOCKED_CODE)) {
                int confirmed = JOptionPane.showConfirmDialog(null,
                        String.format("Press OK to release the pallet ?"),
                        "Pallet state",
                        JOptionPane.WARNING_MESSAGE);

                if (confirmed == 0) {
                    this.bc.setContainerState(newState);
                    this.bc.setContainerStateCode(code);
                    HisBaseContainer hbc = new HisBaseContainer().parseContainerData(this.bc, feedback_txtbox.getText());
                    hbc.create(hbc);
                    Helper.sess.flush();
                    this.dispose();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Merci de saisir un commentaire !", "Erreur ! ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_release_btnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton block_btn;
    private javax.swing.JButton cancel_btn;
    private javax.swing.JTextArea feedback_txtbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel palletNumber_lbl;
    private javax.swing.JButton release_btn;
    private javax.swing.JComboBox<String> status_box;
    // End of variables declaration//GEN-END:variables

    private String getPackagingWh(String project) {
        ConfigWarehouse cw = new ConfigWarehouse();
        List result = cw.selectByProjectAndType(project, "PACKAGING");

        cw = (ConfigWarehouse) result.get(0);
        return (String) cw.getWarehouse();
    }
}
